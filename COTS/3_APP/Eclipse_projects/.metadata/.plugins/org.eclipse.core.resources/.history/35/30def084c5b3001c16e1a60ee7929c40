#include<avr/io.h>
#include<util/delay.h>
#include"STD_TYPES.h"
#include"BIT_MATH.h"
//Assignment2


void main()
{
	DDRA=0;//for 8 DIP switch
	PORTA=0xff;// internal pullup resistor activation for all pins in portB
	DDRB=0xff;
	u8 i;/*counter*/
	while(1)
	{
		switch (PINA)
		{
			/*flashing every 500ms*/
			case 0b11111110:
			PORTB=0xff;
			_delay_ms(500);
			PORTB=0;
			_delay_ms(500);
			break;

			/*shifting left every 250 ms  */
			case 0b11111101:
			PORTB=0;
			for(i=0;i<8;i++)
			{
				PORTB+=(1<<i);
				_delay_ms(500);
			}

			break;

			/*shifting right every 250 ms*/
			case 0b11111011:
			PORTB=0;
			for(i=8;i>0;i--)
			{
				PORTB+=(1>>i);
				_delay_ms(500);
			}

			break;



			/*2-leds converging every 300 ms*/
			case 0b11110111:
			PORTB=0;
			u16 ConvergingArr[]={0b00011000,0b00111100,0b01111110,0b11111111};
			for(i=0;i<4;i++)
			{
				PORTB=ConvergingArr[i];
			}

			break;


			/*2-leds Diverging every 300 ms*/
			case 0b11101111:
			PORTB=0;
			u16 DivergingArr[]={0b11111111,0b01111110,0b00111100,0b00011000};
			for(i=0;i<4;i++)
			{
				PORTB=DivergingArr[i];
			}



			break;


			/*Ping Pong effect every 250 ms*/
			case 0b11011111:

			PORTB=0;
			for(i=0;i<8;i++)
			{
				PORTB=(1<<i);
				_delay_ms(500);
			}

			for(i=7;i>0;i--)
			{
				PORTB=(1>>i);
				_delay_ms(500);
			}

			break;


			/*incrementing (snake effect) every 300 ms*/
			case 0b10111111:
			PORTB=0;
			for(i=0;i<8;i++)
			{
				PORTB+=(1<<i);
				_delay_ms(300);
			}

			break;


			/*2-leds converging/Diverging every 300 ms*/
			case 0b01111111:
			PORTB=0;
			u16 ConvergingArr[]={0b00011000,0b00111100,0b01111110,0b0xff};
			u16 DivergingArr[]={0b0xff,0b01111110,0b00111100,0b00011000};
			for(i=0;i<4;i++)
			{
				PORTB=ConvergingArr[i];
			}


			for(i=3;i>0;i--)
			{
				PORTB=DivergingArr[i];
			}

			break;

			default:
			PORTB=0xff;

		}




	}




}

