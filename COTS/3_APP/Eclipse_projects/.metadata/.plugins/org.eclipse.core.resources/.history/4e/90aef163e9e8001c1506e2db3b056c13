#include "STD_TYPES.h"


#include "DIO_interface.h"
#include "PORT_interface.h"
#include "TIMER_interface.h"

#include "GIE_interface.h"

#include "CLCD_interface.h"


static u16 App_u16PeriodTicks=0;
static u16 App_u16OnTicks=0;

void ICU_HW();

void main()
{

	PORT_voidInit();

	ICU_u8SetCallBack(ICU_HW);
	ICU_voidInit();


	TIMER0_voidSetCompMatchValue(64);
	TIMER1_voidInit();

	CLCD_voidInit();
	TIMER0_voidInit();
	GIE_voidEnable();


	while(1)
	{
		/*Wait until period time and on ticks are measured*/
		while((App_u16PeriodTicks == 0) && (App_u16OnTicks == 0));

		CLCD_voidGoToXY(0,0);
		CLCD_voidSendString("Period T = ");
		CLCD_voidWriteNumber(App_u16PeriodTicks);

		CLCD_voidGoToXY(1,0);
		CLCD_voidSendString("On Ticks = ");
		CLCD_voidWriteNumber(App_u16OnTicks);
	}

}

/*The function that will run inside the INT0_ISR*/

void ICU_HW()
{
	static u16 Reading1,Reading2,Reading3;

	static u8 Local_u8Counter=0;
	Local_u8Counter++;

	if(Local_u8Counter == 1)
	{
		Reading1 = ICU_u16ReadInputCaputure();
	}
	else if (Local_u8Counter == 2)
	{
		Reading2 = ICU_u16ReadInputCaputure();

		App_u16PeriodTicks = Reading2 - Reading1;

		ICU_u8SetTriggerEdge(ICU_FALLING_EDGE);
	}
	else if(Local_u8Counter==3)
	{
		Reading3 = ICU_u16ReadInputCaputure();
		App_u16OnTicks=Reading3 - Reading2;

		ICU_voidDisableInterrupt();
	}
}
